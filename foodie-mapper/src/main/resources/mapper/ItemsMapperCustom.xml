<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.o0u0o.mapper.ItemsMapperCustom">

  <!-- 查询商品评论 -->
  <select id="queryItemComments" parameterType="Map" resultType="com.o0u0o.pojo.vo.ItemCommentVO">
    SELECT
        ic.comment_level as commentLevel,
        ic.content as content,
        ic.sepc_name as specName,
        ic.created_time as createdTime,
        u.face as userFace,
        u.nickname as nickname
    FROM
        items_comments ic
    LEFT JOIN
        users u on ic.user_id = u.id
    WHERE
        ic.item_id = #{paramsMap.itemId,jdbcType=INTEGER}
    <if test="paramsMap.level != null and  paramsMap.level !='' ">
      AND ic.comment_level = #{paramsMap.level,jdbcType=INTEGER}
    </if>
  </select>

    <!-- 搜索商品 展示规格的折扣最低价 -->
    <select id="searchItems" parameterType="Map" resultType="com.o0u0o.pojo.vo.SearchItemsVO">
        SELECT
            i.id as itemId,
            i.item_name as itemName,
            i.sell_counts as sellCounts,
            ii.url as imgUrl,
            tempSpec.price_discount as price
        FROM
            items i
        LEFT JOIN
            items_img ii
        ON
            i.id = ii.item_id
        LEFT JOIN
            (SELECT item_id, MIN(price_discount) as price_discount FROM items_spec GROUP BY item_id) tempSpec
        ON
            i.id = tempSpec.item_id
        WHERE
            ii.is_main = 1
            <if test="paramsMap.keywords !=null and paramsMap.keywords != ''">
                AND i.item_name like '%${paramsMap.keywords}%'
            </if>
            <!--   使用choose标签进行多条件判断
            排序规则：
             k: 默认-根据名称排序
             c: 根据销量 &quot; 单引号进行转义 paramsMap.sort == 'c'
             p: 根据价格
            -->
            order by
            <choose>
                <when test="paramsMap.sort == &quot;c&quot; ">
                    i.sell_counts desc
                </when>
                <when test="paramsMap.sort == &quot;p&quot; ">
                    tempSpec.price_discount asc
                </when>
                <otherwise>
                    i.item_name asc
                </otherwise>
            </choose>
    </select>

    <!--  根据三级分类ID进行搜索  -->
    <select id="searchItemsByThirdCat" parameterType="Map" resultType="com.o0u0o.pojo.vo.SearchItemsVO">
        SELECT
        i.id as itemId,
        i.item_name as itemName,
        i.sell_counts as sellCounts,
        ii.url as imgUrl,
        tempSpec.price_discount as price
        FROM
        items i
        LEFT JOIN
        items_img ii
        ON
        i.id = ii.item_id
        LEFT JOIN
        (SELECT item_id, MIN(price_discount) as price_discount FROM items_spec GROUP BY item_id) tempSpec
        ON
        i.id = tempSpec.item_id
        WHERE
        ii.is_main = 1
        AND
        i.cat_id = #{paramsMap.catId,jdbcType=INTEGER}
        order by
        <choose>
            <when test="paramsMap.sort == &quot;c&quot; ">
                i.sell_counts desc
            </when>
            <when test="paramsMap.sort == &quot;p&quot; ">
                tempSpec.price_discount asc
            </when>
            <otherwise>
                i.item_name asc
            </otherwise>
        </choose>
    </select>
    
    <select id="queryItemsBySpecIds" parameterType="List" resultType="com.o0u0o.pojo.vo.ShopCartVO">
        SELECT
                t_items.id as itemId,
                t_items.item_name as itemName,
                t_items_img.url as itemImgUrl,
                t_items_spec.id as specId,
                t_items_spec.`name` as specName,
                t_items_spec.price_discount as priceDiscount,
                t_items_spec.price_normal as priceNormal
        FROM
                items_spec t_items_spec
        LEFT JOIN
                items t_items
        ON
                t_items.id = t_items_spec.item_id
        LEFT JOIN
                items_img t_items_img
        ON
                t_items_img.item_id = t_items.id
        WHERE
                t_items_img.is_main = 1
        AND
                t_items_spec.id IN
                <foreach collection="paramsList" index="index" item="specId" open="(" separator="," close=")">
                    #{specId}
                </foreach>

    </select>

    <!--  扣除库存 使用MySQL乐观锁机制  -->
    <update id="decreaseItemSpecStock">
        update
            items_spec
        set
            stock = stock - #{pendingCounts}
        where
            id = #{specId}
        and
            stock >=  #{pendingCounts}
    </update>

</mapper>